{
  "_args": [
    [
      "pouchdb-rewrite@https://registry.npmjs.org/pouchdb-rewrite/-/pouchdb-rewrite-1.0.7.tgz",
      "/home/hottab/Desktop/pouchServers"
    ]
  ],
  "_from": "pouchdb-rewrite@>=1.0.7 <2.0.0",
  "_id": "pouchdb-rewrite@1.0.7",
  "_inCache": true,
  "_location": "/pouchdb-rewrite",
  "_phantomChildren": {},
  "_requested": {
    "name": "pouchdb-rewrite",
    "raw": "pouchdb-rewrite@https://registry.npmjs.org/pouchdb-rewrite/-/pouchdb-rewrite-1.0.7.tgz",
    "rawSpec": "https://registry.npmjs.org/pouchdb-rewrite/-/pouchdb-rewrite-1.0.7.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/pouchdb-rewrite/-/pouchdb-rewrite-1.0.7.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/express-pouchdb"
  ],
  "_resolved": "https://registry.npmjs.org/pouchdb-rewrite/-/pouchdb-rewrite-1.0.7.tgz",
  "_shasum": "3f977e3df4c9e54cf75e872de9e911f87790c2d8",
  "_shrinkwrap": null,
  "_spec": "pouchdb-rewrite@https://registry.npmjs.org/pouchdb-rewrite/-/pouchdb-rewrite-1.0.7.tgz",
  "_where": "/home/hottab/Desktop/pouchServers",
  "author": {
    "name": "Marten de Vries"
  },
  "bugs": {
    "url": "https://github.com/pouchdb/pouchdb-rewrite/issues"
  },
  "dependencies": {
    "couchdb-objects": "^1.0.0",
    "extend": "^1.2.1",
    "pouchdb-plugin-error": "^1.0.0",
    "pouchdb-req-http-query": "^1.0.3",
    "pouchdb-route": "^1.0.0",
    "promise-nodify": "^1.0.0"
  },
  "description": "A PouchDB plug-in that allows you to re-use your CouchDB rewrites on the client side.",
  "devDependencies": {
    "pouchdb-all-dbs": "^1.0.1",
    "pouchdb-list": "^1.0.6",
    "pouchdb-plugin-helper": "^2.0.1",
    "pouchdb-seamless-auth": "^1.0.2",
    "pouchdb-security": "^1.2.5",
    "pouchdb-show": "^1.0.7",
    "pouchdb-update": "^1.0.7",
    "pouchdb-validation": "^1.2.1"
  },
  "homepage": "https://github.com/pouchdb/pouchdb-rewrite#readme",
  "keywords": [
    "couch",
    "couchdb",
    "design",
    "pouch",
    "pouchdb",
    "rewrite"
  ],
  "license": "Apache-2.0",
  "main": "index.js",
  "name": "pouchdb-rewrite",
  "optionalDependencies": {},
  "readme": "pouchdb-rewrite\n===============\n\n[![Build Status](https://travis-ci.org/pouchdb/pouchdb-rewrite.svg?branch=master)](https://travis-ci.org/pouchdb/pouchdb-rewrite)\n[![Dependency Status](https://david-dm.org/pouchdb/pouchdb-rewrite.svg)](https://david-dm.org/pouchdb/pouchdb-rewrite)\n[![devDependency Status](https://david-dm.org/pouchdb/pouchdb-rewrite/dev-status.svg)](https://david-dm.org/pouchdb/pouchdb-rewrite#info=devDependencies)\n\nA PouchDB plug-in that allows you to re-use your CouchDB rewrites on the\nclient side. A browser version is available.\n\n#TODO: update, rst -> md, integrate\n```rst\n.. _pouchdb-rewrite-plug-in:\n\nPouchDB Rewrite plug-in\n=======================\n+----------------------+--------------------+\n| NodeJS package name: | `pouchdb-rewrite`_ |\n+----------------------+--------------------+\n| Browser object name: | ``window.Rewrite`` |\n+----------------------+--------------------+\n\nFirst, make sure you understand CouchDB rewrites. A good starting point\nis `the rewrite documentation`_.\n\n.. _pouchdb-rewrite: https://www.npmjs.org/package/pouchdb-rewrite\n.. _the rewrite documentation: http://docs.couchdb.org/en/latest/api/ddoc/rewrites.html\n\n.. js:function:: Rewrite.rewrite(rewritePath[, options[, callback]])\n\n   Figures out where to redirect to, and then executes the corresponding\n   PouchDB function, with the appropriate arguments gotten from the\n   request object that has been generated from the ``options``\n   parameter.\n\n   :param string rewritePath: a path of the form\n       ``\"designDocName/rewrite/path\"``. Specifies the design document\n       to use the rewrites from, and the path you'd find in CouchDB\n       after the ``/_rewrite`` part of the URL. Keep in mind that you\n       can't specify a query parameter in the url form (i.e. no\n       ``?a=b``). Instead use the ``options.query`` parameter.\n   :param object options: A CouchDB request object stub. Important\n       properties of those for rewrites are ``options.query`` and\n       ``options.method``. An additional boolean option is available:\n       ``options.withValidation``, if true, this function routes to\n       ``db.validating*`` functions instead of ``db.*`` functions if\n       relevant.\n   :returns: whatever output the function that the rewrite routed to\n       produced. Or, in the case of an 'http' database, a CouchDB\n       response object.\n\n.. js:function:: Rewrite.rewriteResultRequestObject(rewritePath[, options[, callback]])\n\n   See the :js:func:`Rewrite.rewrite` function for information on the\n   parameters. The difference with it is that this function doesn't try\n   to route the rewrite to a function.\n\n   :returns: A CouchDB request object that points to the resource\n       obtained by following the redirect.\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/pouchdb/pouchdb-rewrite.git"
  },
  "scripts": {
    "build": "npm run helper -- build Rewrite",
    "helper": "pouchdb-plugin-helper",
    "test": "npm run helper -- test"
  },
  "version": "1.0.7"
}
