{
  "_args": [
    [
      "xmlhttprequest-cookie@https://registry.npmjs.org/xmlhttprequest-cookie/-/xmlhttprequest-cookie-0.9.4.tgz",
      "/home/hottab/Desktop/pouchServers"
    ]
  ],
  "_from": "xmlhttprequest-cookie@>=0.9.2 <0.10.0",
  "_id": "xmlhttprequest-cookie@0.9.4",
  "_inCache": true,
  "_location": "/xmlhttprequest-cookie",
  "_phantomChildren": {},
  "_requested": {
    "name": "xmlhttprequest-cookie",
    "raw": "xmlhttprequest-cookie@https://registry.npmjs.org/xmlhttprequest-cookie/-/xmlhttprequest-cookie-0.9.4.tgz",
    "rawSpec": "https://registry.npmjs.org/xmlhttprequest-cookie/-/xmlhttprequest-cookie-0.9.4.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/xmlhttprequest-cookie/-/xmlhttprequest-cookie-0.9.4.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/pouchdb-req-http-query"
  ],
  "_resolved": "https://registry.npmjs.org/xmlhttprequest-cookie/-/xmlhttprequest-cookie-0.9.4.tgz",
  "_shasum": "20548d15d63f3b21ebc886c0748eb7f169923322",
  "_shrinkwrap": null,
  "_spec": "xmlhttprequest-cookie@https://registry.npmjs.org/xmlhttprequest-cookie/-/xmlhttprequest-cookie-0.9.4.tgz",
  "_where": "/home/hottab/Desktop/pouchServers",
  "author": {
    "email": "rse@engelschall.com",
    "name": "Ralf S. Engelschall",
    "url": "http://engelschall.com"
  },
  "bugs": {
    "url": "http://github.com/rse/node-xmlhttprequest-cookie/issues"
  },
  "dependencies": {
    "xmlhttprequest": ">=1.8.0"
  },
  "description": "Cookie-aware XMLHttpRequest Wrapper",
  "devDependencies": {
    "grunt": "~0.4.5",
    "grunt-cli": "~0.1.13",
    "grunt-contrib-clean": "~0.7.0",
    "grunt-contrib-jshint": "~0.11.3"
  },
  "engines": {
    "node": ">=0.8.0"
  },
  "homepage": "http://github.com/rse/node-xmlhttprequest-cookie",
  "keywords": [
    "ajax",
    "cookie",
    "http",
    "xmlhttprequest"
  ],
  "license": "MIT",
  "main": "./xmlhttprequest-cookie.js",
  "name": "xmlhttprequest-cookie",
  "optionalDependencies": {},
  "readme": "\nNode XMLHttpRequest-Cookie\n==========================\n\n<p/>\n<img src=\"https://nodei.co/npm/xmlhttprequest-cookie.png?downloads=true&stars=true\" alt=\"\"/>\n\n<p/>\n<img src=\"https://david-dm.org/rse/node-xmlhttprequest-cookie.png\" alt=\"\"/>\n\nAbstract\n--------\n\nThis is a [Node.js](http://nodejs.org/) extension module for wrapping\nthe [Node-XMLHttpRequest](https://github.com/driverdan/node-XMLHttpRequest)\nmodule to allow it to handle HTTP Cookies, similar to what a browser\nautomatically does.\n\nInstallation\n------------\n\nUse the Node Package Manager (NPM) to install this module\nlocally (default) or globally (with option `-g`):\n\n    $ npm install [-g] xmlhttprequest-cookie\n\nAPI\n---\n\nThe API is fully compatible to the API provided by the underlying\n[Node-XMLHttpRequest Extension Module](https://github.com/driverdan/node-XMLHttpRequest),\nmodule (which in turn is compatible to the API defined by the\n[W3C XMLHttpRequest API Specification](http://www.w3.org/TR/XMLHttpRequest/).\nIn addition, the exposed `XMLHttpRequest` object also has a \n`debug` flag for controlling debug messages and there is a `CookieJar` object exposed by the module which\ngrants access to the cookie jar:\n\n    var fs = require(\"fs\");\n    var xhrc = require(\"./xmlhttprequest-cookie\");\n    var XMLHttpRequest = xhrc.XMLHttpRequest;\n    var CookieJar = xhrc.CookieJar;\n\n    if (fs.existsSync(\"./sample.db\"))\n        CookieJar.load(fs.readFileSync(\"./sample.db\", { encoding: \"utf8\" }));\n\n    var get = function (url, complete) {\n        var xhr = new XMLHttpRequest();\n        xhr.debug = true;\n        xhr.onreadystatechange = function() {\n            if (xhr.readyState === 4) {\n                console.log(\"body length: \" + this.responseText.length);\n                complete(xhr);\n            }\n        };\n        xhr.open(\"GET\", \"https://github.com/rse/\");\n        xhr.send();\n    };\n\n    get(\"https://github.com/rse/\", function (xhr) {\n        console.log(\"body: \" + xhr.responseText.substr(0, 100));\n        get(\"https://github.com/rse/\", function (xhr) {\n            console.log(\"body: \" + xhr.responseText.substr(0, 100));\n            fs.writeFileSync(\"./sample.db\", CookieJar.save(), { encoding: \"utf8\" });\n        });\n    });\n\nSee Also\n--------\n\n- [Node-XMLHttpRequest Extension Module](https://github.com/driverdan/node-XMLHttpRequest)\n- [XMLHttpRequest Wikipedia Information](http://en.wikipedia.org/wiki/XMLHttpRequest)\n- [XMLHttpRequest API Specification](http://www.w3.org/TR/XMLHttpRequest/)\n\nLicense\n-------\n\nCopyright (c) 2013-2015 Ralf S. Engelschall (http://engelschall.com/)\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/rse/node-xmlhttprequest-cookie.git"
  },
  "version": "0.9.4"
}
